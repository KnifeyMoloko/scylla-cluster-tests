# UDF script: returns a tuple with the accumulator incremented by arg and counter incremented by 1

name: 'xwasm_plus_acc_int'
args: '(acc tuple<int, int>, arg int)'
called_on_null_input_returns: 'NULL'
return_type: 'tuple <int, int>'
language: 'xwasm'
script: |-
  (module
  (type (;0;) (func (param i64 i64) (result i64)))
  (type (;1;) (func (param i32) (result i32)))
  (func $xwasm_plus_acc_int (type 0) (param i64 i64) (result i64)
    (local i32 i32 i32 i64 i64 i64 i32 i64 i64 i64 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i64 i64 i32 i32 i32 i64 i64 i64 i64 i64 i32 i64 i64 i64 i64 i64 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i64 i64 i32 i32)
    global.get $__stack_pointer
    local.set 2
    i32.const 48
    local.set 3
    local.get 2
    local.get 3
    i32.sub
    local.set 4
    local.get 4
    global.set $__stack_pointer
    local.get 4
    local.get 0
    i64.store offset=32
    local.get 4
    local.get 1
    i64.store offset=24
    local.get 4
    i64.load offset=24
    local.set 5
    i64.const 32
    local.set 6
    local.get 5
    local.get 6
    i64.shr_s
    local.set 7
    local.get 7
    i32.wrap_i64
    local.set 8
    local.get 4
    local.get 8
    i32.store offset=20
    local.get 4
    i64.load offset=32
    local.set 9
    i64.const 32
    local.set 10
    local.get 9
    local.get 10
    i64.shr_s
    local.set 11
    local.get 11
    i32.wrap_i64
    local.set 12
    local.get 4
    local.get 12
    i32.store offset=16
    local.get 4
    i32.load offset=20
    local.set 13
    i32.const 4
    local.set 14
    local.get 13
    local.set 15
    local.get 14
    local.set 16
    local.get 15
    local.get 16
    i32.ne
    local.set 17
    i32.const 1
    local.set 18
    local.get 17
    local.get 18
    i32.and
    local.set 19
    block  ;; label = @1
      block  ;; label = @2
        block  ;; label = @3
          local.get 19
          br_if 0 (;@3;)
          local.get 4
          i32.load offset=16
          local.set 20
          i32.const 16
          local.set 21
          local.get 20
          local.set 22
          local.get 21
          local.set 23
          local.get 22
          local.get 23
          i32.ne
          local.set 24
          i32.const 1
          local.set 25
          local.get 24
          local.get 25
          i32.and
          local.set 26
          local.get 26
          i32.eqz
          br_if 1 (;@2;)
        end
        local.get 4
        i64.load offset=32
        local.set 27
        local.get 4
        local.get 27
        i64.store offset=40
        br 1 (;@1;)
      end
      local.get 4
      i64.load offset=24
      local.set 28
      i64.const 4294967295
      local.set 29
      local.get 28
      local.get 29
      i64.and
      local.set 30
      local.get 30
      i32.wrap_i64
      local.set 31
      local.get 31
      i32.load
      local.set 32
      local.get 32
      call $swap_int32
      local.set 33
      local.get 4
      local.get 33
      i32.store offset=12
      local.get 4
      i64.load offset=32
      local.set 34
      i64.const 4
      local.set 35
      local.get 34
      local.get 35
      i64.add
      local.set 36
      i64.const 4294967295
      local.set 37
      local.get 36
      local.get 37
      i64.and
      local.set 38
      local.get 38
      i32.wrap_i64
      local.set 39
      local.get 4
      local.get 39
      i32.store offset=8
      local.get 4
      i64.load offset=32
      local.set 40
      i64.const 12
      local.set 41
      local.get 40
      local.get 41
      i64.add
      local.set 42
      i64.const 4294967295
      local.set 43
      local.get 42
      local.get 43
      i64.and
      local.set 44
      local.get 44
      i32.wrap_i64
      local.set 45
      local.get 4
      local.get 45
      i32.store offset=4
      local.get 4
      i32.load offset=8
      local.set 46
      local.get 46
      i32.load
      local.set 47
      local.get 47
      call $swap_int32
      local.set 48
      i32.const 1
      local.set 49
      local.get 48
      local.get 49
      i32.add
      local.set 50
      local.get 50
      call $swap_int32
      local.set 51
      local.get 4
      i32.load offset=8
      local.set 52
      local.get 52
      local.get 51
      i32.store
      local.get 4
      i32.load offset=12
      local.set 53
      local.get 4
      i32.load offset=4
      local.set 54
      local.get 54
      i32.load
      local.set 55
      local.get 55
      call $swap_int32
      local.set 56
      local.get 53
      local.get 56
      i32.add
      local.set 57
      local.get 57
      call $swap_int32
      local.set 58
      local.get 4
      i32.load offset=4
      local.set 59
      local.get 59
      local.get 58
      i32.store
      local.get 4
      i64.load offset=32
      local.set 60
      local.get 4
      local.get 60
      i64.store offset=40
    end
    local.get 4
    i64.load offset=40
    local.set 61
    i32.const 48
    local.set 62
    local.get 4
    local.get 62
    i32.add
    local.set 63
    local.get 63
    global.set $__stack_pointer
    local.get 61
    return)
  (func $swap_int32 (type 1) (param i32) (result i32)
    (local i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    global.get $__stack_pointer
    local.set 1
    i32.const 16
    local.set 2
    local.get 1
    local.get 2
    i32.sub
    local.set 3
    local.get 3
    local.get 0
    i32.store offset=12
    local.get 3
    i32.load offset=12
    local.set 4
    i32.const 8
    local.set 5
    local.get 4
    local.get 5
    i32.shl
    local.set 6
    i32.const -16711936
    local.set 7
    local.get 6
    local.get 7
    i32.and
    local.set 8
    local.get 3
    i32.load offset=12
    local.set 9
    i32.const 8
    local.set 10
    local.get 9
    local.get 10
    i32.shr_s
    local.set 11
    i32.const 16711935
    local.set 12
    local.get 11
    local.get 12
    i32.and
    local.set 13
    local.get 8
    local.get 13
    i32.or
    local.set 14
    local.get 3
    local.get 14
    i32.store offset=12
    local.get 3
    i32.load offset=12
    local.set 15
    i32.const 16
    local.set 16
    local.get 15
    local.get 16
    i32.shl
    local.set 17
    local.get 3
    i32.load offset=12
    local.set 18
    i32.const 16
    local.set 19
    local.get 18
    local.get 19
    i32.shr_s
    local.set 20
    i32.const 65535
    local.set 21
    local.get 20
    local.get 21
    i32.and
    local.set 22
    local.get 17
    local.get 22
    i32.or
    local.set 23
    local.get 23
    return)
  (memory (;0;) 2)
  (global $__stack_pointer (mut i32) (i32.const 66576))
  (global (;1;) i32 (i32.const 1024))
  (export "memory" (memory 0))
  (export "xwasm_plus_acc_int" (func $xwasm_plus_acc_int))
  (export "_scylla_abi" (global 1))
  (data $.rodata (i32.const 1024) "\01\00\00\00"))
