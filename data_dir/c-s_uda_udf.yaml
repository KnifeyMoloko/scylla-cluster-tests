# Keyspace Name
keyspace: ks

# The CQL for creating a keyspace (optional if it already exists)
keyspace_definition: |
  CREATE KEYSPACE ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 3};

# Table name
table: uda_udf

# The CQL for creating a table you wish to stress (optional if it already exists)
table_definition: |
  CREATE TABLE uda_udf (
        pk timeuuid,
        ck int,
        c1 timeuuid,
        c2 int,
        c3 int,
        c4 bigint,
        c5 double,
        c6 float,
        c7 text,
        PRIMARY KEY(pk, ck)
  ) WITH compaction = { 'class':'SizeTieredCompactionStrategy' }
    AND comment='A test table for testing UDAs and UDFs'

### Column Distribution Specifications ###

columnspec:
  - name: pk
    population: uniform(1..20M)
  - name: ck
    cluster: uniform(1..1k)
    population: uniform(1..20M)
  - name: c1
    population: uniform(1..1k)
  - name: c2
    population: uniform(1..1k)
  - name: c3
    population: uniform(1..1k)
  - name: c4
    population: uniform(1..1k)
  - name: c5
    population: uniform(1..1k)
  - name: c6
    population: uniform(1..1k)
  - name: c7
    population: uniform(1..1k)

insert:
  partitions: fixed(2)
  select:    fixed(2)/10240M
  batchtype: UNLOGGED

queries:
  my_avg:
    cql: "SELECT ks.my_avg(c2) AS result FROM ks.uda_udf"
    fields: samerow
  lua_var_length_counter:
    cql: "SELECT ks.lua_var_length_counter(c7) AS result FROM ks.uda_udf LIMIT 10"
    fields: samerow
  xwasm_plus:
    cql: "SELECT ks.xwasm_plus(c2, c3) AS result FROM ks.uda_udf LIMIT 10"
    fields: samerow
  xwasm_div:
    cql: "SELECT ks.xwasm_div(c2, c3) AS result FROM ks.uda_udf LIMIT 10"
    fields: samerow
#  xwasm_fib:
#    cql: "SELECT ks.xwasm_fib(c2) AS result AS result FROM ks.uda_udf LIMIT 10"
#    fields: samerow
